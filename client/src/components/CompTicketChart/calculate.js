const khelp = {};
khelp.IsNumber = value => {
  if (value == null) return false;
  if (isNaN(value)) return false;

  return true;
};

//引用若干周期前的数据(平滑处理).
//用法: REF(X,A),引用A周期前的X值.A可以是变量.
//平滑处理:当引用不到数据时进行的操作.此函数中,平滑时使用上一个周期的引用值.
//例如: REF(CLOSE,BARSCOUNT(C)-1)表示第二根K线的收盘价.
khelp.REF = (data, n) => {
  let result = [];
  if (typeof n == 'number') {
    if (data.length <= 0) return result;
    if (n >= data.length) return result;

    result = data.slice(0, data.length - n);

    //平滑处理
    var firstData = data[0];
    for (let i = 0; i < n; ++i) result.unshift(firstData);
  } //n 为数组的情况
  else {
    for (let i = 0; i < data.length; ++i) {
      result[i] = null;
      if (i >= n.length) continue;
      var value = n[i];
      if (value >= 0 && value <= i) result[i] = data[i - value];
      else if (i) result[i] = result[i - 1];
      else result[i] = data[i];
    }
  }

  return result;
};

//取正数
khelp.ABS = data => {
  let result = [];

  for (let i in data) {
    result[i] = null;
    if (!isNaN(data[i])) result[i] = Math.abs(data[i]);
  }

  return result;
};

khelp.SUM = (data, n) => {
  var result = [];

  if (!Array.isArray(n)) {
    if (n == 0) {
      result[0] = data[0];

      for (var i = 1; i < data.length; ++i) {
        result[i] = result[i - 1] + data[i];
      }
    } else {
      for (var i = n - 1, j = 0; i < data.length; ++i, ++j) {
        for (var k = 0; k < n; ++k) {
          if (k == 0) result[i] = data[k + j];
          else result[i] += data[k + j];
        }
      }
    }
  } else {
    for (var i = 0; i < data.length; ++i) {
      result[i] = null;
      var totalCount = n[i];
      if (!(totalCount > 0)) continue;

      for (var j = i, k = 0; j >= 0 && k < totalCount; --j, ++k) {
        if (k == 0) result[i] = data[j];
        else result[i] += data[j];
      }
    }
  }

  return result;
};

//求最大值.
//用法:MAX(A,B,C,D ..... ) 返回A,B,C,D ..... 中的较大值
//例如: MAX(CLOSE-OPEN,0)表示若收盘价大于开盘价返回它们的差值,否则返回0
khelp.MAX = (args, node) => {
  if (args.length == 1) return args[0];

  var aryData = [],
    aryNumber = [];
  for (var i in args) {
    var item = args[i];
    if (khelp.IsNumber(item)) aryNumber.push(item);
    else if (Array.isArray(item)) aryData.push(item);
  }

  var maxNumber = null;
  if (aryNumber.length > 0) {
    maxNumber = aryNumber[0];
    for (var i = 1; i < aryNumber.length; ++i) {
      maxNumber = Math.max(maxNumber, aryNumber[i]);
    }
  }

  var maxAryData = null;
  if (aryData.length > 0) {
    maxAryData = aryData[0].slice(0);
    for (var i = 1; i < aryData.length; ++i) {
      var dataItem = aryData[i];
      for (var j in dataItem) {
        var maxItem = maxAryData[j];
        var item = dataItem[j];
        if (!khelp.IsNumber(maxItem)) continue;
        if (!khelp.IsNumber(item)) {
          maxAryData[j] = null;
          continue;
        }

        maxAryData[j] = Math.max(maxItem, item);
      }
    }
  }

  if (maxAryData == null && maxNumber != null) return maxNumber;
  if (maxAryData && maxNumber == null) return maxAryData;

  for (var i in maxAryData) {
    if (!khelp.IsNumber(maxAryData[i])) continue;
    maxAryData[i] = Math.max(maxAryData[i], maxNumber);
  }

  return maxAryData;
};

khelp.IF = (data, trueData, falseData) => {
  let isNumber = khelp.IsNumber(data);
  let isNumber2 = khelp.IsNumber(trueData);
  let isNumber3 = khelp.IsNumber(falseData);

  var isArray2 = Array.isArray(trueData);
  var isArray3 = Array.isArray(falseData);

  //单数值
  if (isNumber) {
    if (isNumber2 && isNumber3) return data ? trueData : falseData;

    return data ? trueData : falseData;
  }

  //都是数组
  let result = [];
  for (let i in data) {
    if (data[i]) {
      if (isNumber2) result[i] = trueData;
      else if (isArray2) result[i] = trueData[i];
      else result[i] = null;
    } else {
      if (isNumber3) result[i] = falseData;
      else if (isArray3) result[i] = falseData[i];
      else result[i] = null;
    }
  }

  return result;
};

/**
 * 计算历史 MA 值
 * @param {*} data 收盘历史数组值
 * @param {*} dayCount 统计天数
 * @returns
 */
khelp.MA = (data, dayCount) => {
  let result = [];
  if (dayCount <= 0) return result;

  if (!Array.isArray(dayCount)) {
    if (dayCount <= 0) dayCount = 1;
    if (!data || !data.length) return result;

    for (var i = 0; i < data.length; ++i) {
      result[i] = null;
      if (khelp.IsNumber(data[i])) break;
    }

    var data = data.slice(0); //复制一份数据出来
    for (var days = 0; i < data.length; ++i, ++days) {
      if (days < dayCount - 1) {
        result[i] = null;
        continue;
      }

      let preValue = data[i - (dayCount - 1)];
      let sum = 0;
      for (let j = dayCount - 1; j >= 0; --j) {
        var value = data[i - j];
        if (!khelp.IsNumber(value)) {
          value = preValue; //空数据就取上一个数据
          data[i - j] = value;
        } else {
          preValue = value;
        }
        sum += value;
      }

      result[i] = sum / dayCount;
    }
  } else {
    for (var i = 0; i < data.length; ++i) {
      result[i] = null;
      if (i >= dayCount.length) continue;
      var sumCount = dayCount[i];
      if (!khelp.IsNumber(sumCount)) continue;
      if (sumCount <= 0) continue;

      var sum = 0;
      var count = 0;
      for (var j = i, k = 0; j >= 0 && k < sumCount; --j, ++k) {
        sum += data[j];
        ++count;
      }
      if (count > 0) result[i] = sum / count;
    }
  }

  console.log(dayCount, result);
  return result;
};

/**
 * 计算历史 PBX 值
 * @param {*} closeArry 收盘历史数组值
 * @param {*} vadayCountue 统计天数 5
 * @param {*} p 结果最大保留位数 2
 * @returns PBX 数组值
 */
khelp.PBX = (closeArry, dayCount = 5, p = 2) => {
  var v = khelp.MA(closeArry, dayCount);
  var v2 = khelp.MA(closeArry, dayCount * 2);
  var v4 = khelp.MA(closeArry, dayCount * 4);
  return closeArry.map((m, i) => {
    return ((v[i] + v2[i] + v4[i]) / 3).toFixed(p) - 0;
  });
};

/**
 * 计算ASI震动指标，最小天数M1+M2 (18+8)
 * @param {*} dataArry 高低开收数值[{HIGH:,LOW,OPEN,CLOSE}]
 * @param {*} M1 参数1,默认18
 * @param {*} M2 参数2,默认8
 * @returns [{18线值，8线值，18-8值差}]
 */
khelp.ASI = (dataArry, M1 = 18, M2 = 8) => {
  // 高HIGH
  // 低LOW
  // 收盘CLOSE
  // 开盘OPEN
  var openArry = [];
  var closeArry = [];
  var highArry = [];
  var lowArry = [];
  dataArry.forEach(m => {
    openArry.push(m.OPEN);
    closeArry.push(m.CLOSE);
    highArry.push(m.HIGH);
    lowArry.push(m.LOW);
  });

  //
  var lowValues = khelp.REF(lowArry, 1);
  var openValues = khelp.REF(openArry, 1);
  var LC_ = khelp.REF(closeArry, 1);
  var AA_ = khelp.ABS(dataArry.map((m, i) => m.HIGH - LC_[i]));
  var BB_ = khelp.ABS(dataArry.map((m, i) => m.LOW - LC_[i]));
  var CC_ = khelp.ABS(dataArry.map((m, i) => m.HIGH - lowValues[i]));
  var DD_ = khelp.ABS(dataArry.map((m, i) => LC_[i] - openValues[i]));

  var R1 = [];
  var R2 = [];
  var R31 = [];
  var R32 = [];
  var R33 = [];
  var X_ = [];
  dataArry.forEach((m, i) => {
    R1.push(AA_[i] > BB_[i] && AA_[i] > CC_[i] ? 1 : 0);
    R2.push(AA_[i] + BB_[i] / 2 + DD_[i] / 4);
    R31.push(BB_[i] > CC_[i] && BB_[i] > AA_[i] ? 1 : 0);
    R32.push(BB_[i] + AA_[i] / 2 + DD_[i] / 4);
    R33.push(CC_[i] + DD_[i] / 4);
    X_.push(m.CLOSE - LC_[i] + (m.CLOSE - m.OPEN) / 2 + LC_[i] - openValues[i]);
  });
  var R_ = khelp.IF(R1, R2, khelp.IF(R31, R32, R33));
  var SI_ = dataArry.map((m, i) => ((16 * X_[i]) / R_[i]) * khelp.MAX([AA_[i], BB_[i]], 0));
  var ASI = khelp.SUM(SI_, M1);
  var ASIT = khelp.MA(ASI, M2);

  return dataArry.map((m, i) => [ASI[i], ASIT[i], ASI[i] - ASIT[i]]);
  //  X=(5.78-5.86+(5.78-5.80)/2+5.86-6.11); ===》-0.33999999999999986
  // 16*X/0.1825000000000001*MAX(0.05999999999999961,0.1200000000000001);===>-3.5769863013698626
  // LC=REF(CLOSE,1);
  // AA=ABS(HIGH-LC);
  // BB=ABS(LOW-LC);
  // CC=ABS(HIGH-REF(LOW,1));
  // DD=ABS(LC-REF(OPEN,1));
  // R=IF(AA>BB AND AA>CC,AA+BB/2+DD/4,IF(BB>CC AND BB>AA,BB+AA/2+DD/4,CC+DD/4));
  // X=(CLOSE-LC+(CLOSE-OPEN)/2+LC-REF(OPEN,1));
  // SI=16*X/R*MAX(AA,BB);
  // ASI:SUM(SI,M1);
  // ASIT:MA(ASI,M2);
};
export default khelp;

// MA1:MA(CLOSE,M1)
// PBX1:(MA(CLOSE,M1)+MA(CLOSE,M1*2)+MA(CLOSE,M1*4))/3
// var testD = [
//   5.615151718171079,
//   5.621376941805415,
//   5.56534992909639,
//   5.534223810924711,
//   5.540449034559047,
//   5.515548140021703,
//   5.503097692753031,
//   5.540449034559047,
//   5.5466742581933834,
//   5.540449034559047,
//   5.527998587290376,
//   5.434620232775335,
//   5.453295903678343,
//   5.391043667334983,
//   5.459521127312678,
//   5.391043667334983,
//   5.378593220066311,
//   5.341241878260295,
//   5.297665312819943,
//   5.272764418282599,
//   5.384818443700647,
//   5.415944561872326,
//   5.3474671018946305,
//   5.335016654625959,
//   5.272764418282599,
//   5.117133827424199,
//   5.048656367446502,
//   5.104683380155526,
//   5.09845815652119,
//   5.110908603789863,
//   5.2229626292079105,
//   5.2229626292079105,
//   5.204286958304902,
//   5.2229626292079105,
//   5.2229626292079105,
//   5.173160840133223,
//   5.154485169230214,
//   5.210512181939238,
//   5.2852148655512705,
//   5.278989641916935,
//   5.272764418282599,
//   5.310115760088614,
//   5.328791430991623,
//   5.310115760088614,
//   5.2229626292079105,
//   5.229187852842247,
//   5.2852148655512705,
//   5.3163409837229505,
//   5.278989641916935,
//   5.198061734670566,
//   5.16071039286455,
//   5.173160840133223,
//   5.148259945595878,
//   5.173160840133223,
//   5.061106814715175,
//   5.123359051058535,
//   5.092232932886854,
//   5.173160840133223,
//   5.166935616498887,
//   5.154485169230214,
//   5.148259945595878,
//   5.061106814715175,
//   5.067332038349511,
//   5.079782485618183,
//   5.073557261983846,
//   5.061106814715175,
//   5.148259945595878,
//   5.198061734670566,
//   5.185611287401895,
//   5.142034721961543,
//   5.054881591080838,
//   4.998854578371814,
//   4.861899658416422,
//   4.861899658416422,
//   4.812097869341734,
//   4.89274755430277,
//   4.6328763472061025,
//   4.561187738351849,
//   4.489499129497596,
//   4.561187738351849,
//   4.543265586138286,
//   4.6149541949925394,
//   4.6149541949925394,
//   4.50742128171116,
//   4.623915271099321,
//   4.5970320427789755,
//   4.561187738351849,
//   4.534304510031504,
//   4.498460205604378,
//   4.570148814458631,
//   4.650798499419666,
//   4.982358315370585,
//   5.322879207428288,
//   5.233268446360471,
//   5.134696609185874,
//   5.143657685292656,
//   5.242229522467253,
//   5.197424141933345,
//   5.0898912286519655,
//   5.018202619797712,
//   4.874825402089207,
//   4.910669706516333,
//   5.233268446360471,
//   5.134696609185874,
//   5.179501989719782,
//   5.197424141933345,
//   5.152618761399436,
//   5.107813380865529,
//   5.018202619797712,
//   4.964436163157022,
//   4.83898109766208,
//   4.910669706516333,
//   4.9554750870502415,
//   4.883786478195988,
//   4.874825402089207,
//   4.847942173768861,
//   4.946514010943459,
//   4.964436163157022,
//   4.89274755430277,
//   4.812097869341735,
//   4.83898109766208,
//   4.776253564914608,
//   4.830020021555298,
//   4.722487108273918,
//   4.641837423312884,
//   4.623915271099321,
//   4.623915271099321,
//   4.588070966672194,
//   4.570148814458631,
//   4.641837423312884,
//   4.6328763472061025,
//   4.552226662245068,
//   4.83898109766208,
//   4.821058945448517,
//   4.794175717128171,
//   4.9196307826231145,
//   4.847942173768861,
//   4.865864325982424,
//   4.883786478195988,
//   4.9196307826231145,
//   4.776253564914608,
//   4.740409260487482,
//   4.803136793234954,
//   4.570148814458631,
//   4.623915271099321,
//   4.561187738351849,
//   4.516382357817941,
//   4.579109890565412,
//   4.444693748963688,
//   4.543265586138286,
//   4.722487108273918,
//   4.6328763472061025,
//   4.713526032167136,
//   4.7314481843807,
//   4.7672924888078265,
//   4.650798499419666,
//   4.704564956060356,
//   4.821058945448517,
//   4.794175717128171,
//   4.874825402089207,
//   4.856903249875643,
//   4.830020021555298,
//   4.812097869341735,
//   4.812097869341735,
//   4.740409260487482,
//   4.803136793234954,
//   4.821058945448517,
//   4.794175717128171,
//   4.83898109766208,
//   4.937552934836678,
//   4.991319391477368,
//   4.9196307826231145,
//   4.937552934836678,
//   4.946514010943459,
//   4.865864325982424,
//   4.89274755430277,
//   4.982358315370585,
//   5.000280467584149,
//   5.0540469242248385,
//   5.170540913612999,
//   5.206385218040126,
//   5.421451044602885,
//   5.3766456640689775,
//   5.269112750787598,
//   5.322879207428288,
//   5.313918131321506,
//   5.269112750787598,
//   5.322879207428288,
//   5.528983957884265,
//   5.528983957884265,
//   5.663400099485989,
//   5.582750414524956,
//   5.573789338418173,
//   5.251190598574035,
//   5.197424141933345,
//   5.107813380865529,
//   5.027163695904494,
//   5.000280467584149,
//   4.946514010943459,
//   5.107813380865529,
//   5.018202619797712,
//   5.018202619797712,
//   5.134696609185874,
//   5.143657685292656,
//   5.125735533079092,
//   5.11677445697231,
//   5.0898912286519655,
//   5.098852304758747,
//   5.063008000331621,
//   5.143657685292656,
//   5.152618761399436,
//   5.107813380865529,
//   5.358723511855414,
//   5.349762435748632,
//   5.287034903001161,
//   5.313918131321506,
//   5.27807382689438,
//   5.421451044602885,
//   5.403528892389323,
//   5.50210072956392,
//   5.439373196816449,
//   5.484178577350357,
//   5.493139653457138,
//   5.475217501243575,
//   5.528983957884265,
//   5.55586718620461,
//   5.528983957884265,
//   5.403528892389323,
//   5.493139653457138,
//   5.439373196816449,
//   5.457295349030012,
//   5.3766456640689775,
//   5.403528892389323,
//   5.663400099485989,
//   5.645477947272426,
//   5.600672566738519,
//   5.511061805670702,
//   5.582750414524956,
//   5.654439023379208,
//   5.6992444039131165,
//   5.744049784447024,
//   5.663400099485989,
//   5.403528892389323,
//   5.466256425136794,
//   5.493139653457138,
//   5.448334272923231,
//   5.439373196816449,
//   5.484178577350357,
//   5.708205480019898,
//   5.627555795058863,
//   5.600672566738519,
//   5.582750414524956,
//   5.600672566738519,
//   5.430412120709667,
//   5.358723511855414,
//   5.3766456640689775,
//   5.340801359641851,
//   5.484178577350357,
//   5.591711490631737,
//   5.5469061100978285,
//   5.6813222516995525,
//   5.654439023379208,
//   5.726127632233461,
//   5.797816241087713,
//   5.8515826977284044,
//   5.690283327806334,
//   5.735088708340243,
//   5.8336605455148405,
//   5.985998839330128,
//   5.932232382689438,
//   5.869504849941967,
//   5.914310230475875,
//   5.735088708340243,
//   5.71716655612668,
//   5.735088708340243,
//   5.573789338418173,
//   5.466256425136794,
//   5.50210072956392,
//   5.493139653457138,
//   5.188463065826563,
//   5.233268446360471,
//   5.161579837506218,
//   5.063008000331621,
//   5.134696609185874,
//   5.080930152545184,
//   5.045085848118057,
//   5.107813380865529,
//   5.134696609185874,
//   5.045085848118057,
//   4.964436163157022,
//   4.982358315370585,
//   4.910669706516333,
//   4.910669706516333,
//   4.937552934836678,
//   4.991319391477368,
//   5.018202619797712,
//   4.991319391477368,
//   5.018202619797712,
//   5.027163695904494,
//   5.045085848118057,
//   5.009241543690931,
//   5.0719690764384024,
//   5.080930152545184,
//   5.143657685292656,
//   5.349762435748632,
//   5.313918131321506,
//   5.304957055214724,
//   5.286505030674848,
//   5.277279018404909,
//   5.240374969325154,
//   5.314183067484663,
//   5.40644319018405,
//   5.40644319018405,
//   5.434121226993866,
//   5.378765153374234,
//   5.387991165644173,
//   5.40644319018405,
//   5.304957055214724,
//   5.415669202453989,
//   5.452573251533743,
//   5.48025128834356,
//   5.581737423312884,
//   5.554059386503067,
//   5.434121226993866,
//   5.360313128834356,
//   5.323409079754602,
//   5.332635092024541,
//   5.3972171779141105,
//   5.47102527607362,
//   5.498703312883436,
//   5.48025128834356,
//   5.47102527607362,
//   5.535607361963191,
//   5.48025128834356,
//   5.581737423312884,
//   5.572511411042946,
//   5.572511411042946,
//   5.563285398773007,
//   5.5448333742331295,
//   5.563285398773007,
//   5.434121226993866,
//   5.369539141104296,
//   5.332635092024541,
//   5.203470920245399,
//   5.157340858895706,
//   5.120436809815952,
//   5.157340858895706,
//   5.120436809815952,
//   5.166566871165645,
//   5.055854723926381,
//   5.018950674846627,
//   5.046628711656442,
//   5.028176687116566,
//   5.157340858895706,
//   5.1850188957055225,
//   5.166566871165645,
//   5.138888834355829,
//   5.12966282208589,
//   5.028176687116566,
//   5.055854723926381,
//   5.138888834355829,
//   5.074306748466259,
//   5.046628711656442,
//   5.12966282208589,
//   5.1850188957055225,
//   5.332635092024541,
//   5.314183067484663,
//   5.323409079754602,
//   5.323409079754602,
//   5.304957055214724,
//   5.314183067484663,
//   5.378765153374234,
//   5.323409079754602,
//   5.240374969325154,
//   5.240374969325154,
//   5.231148957055216,
//   5.148114846625767,
//   5.083532760736197,
//   5.074306748466259,
//   5.046628711656442,
//   5.028176687116566,
//   5.046628711656442,
//   5.009724662576687,
//   5.028176687116566,
//   5.055854723926381,
//   5.055854723926381,
//   5.083532760736197,
//   5.12966282208589,
//   5.06508073619632,
//   5.074306748466259,
//   5.138888834355829,
//   5.074306748466259,
//   5.074306748466259,
//   5.046628711656442,
//   4.99127263803681,
//   4.9820466257668725,
//   5.009724662576687,
//   5.018950674846627,
//   4.945142576687117,
//   4.880560490797547,
//   4.8344304294478535,
//   4.871334478527608,
//   4.843656441717792,
//   4.92669055214724,
//   4.85288245398773,
//   4.815978404907976,
//   4.760622331288344,
//   4.640684171779142,
//   4.668362208588957,
//   4.64991018404908,
//   4.64991018404908,
//   4.566876073619633,
//   4.603780122699387,
//   4.631458159509203,
//   4.622232147239264,
//   4.613006134969326,
//   4.677588220858897,
//   4.843656441717792,
//   4.815978404907976,
//   4.742170306748466,
//   4.751396319018406,
//   4.714492269938651,
//   4.72371828220859,
//   4.72371828220859,
//   4.668362208588957,
//   4.677588220858897,
//   4.705266257668712,
//   4.825204417177915,
//   4.797526380368099,
//   4.806752392638037,
//   4.797526380368099,
//   4.871334478527608,
//   4.880560490797547,
//   4.9820466257668725,
//   4.945142576687117,
//   5.028176687116566,
//   5.028176687116566,
//   4.917464539877301,
//   4.92669055214724,
//   4.9359165644171785,
//   5.074306748466259,
//   5.06508073619632,
//   5.12966282208589,
//   5.1850188957055225,
//   5.452573251533743,
//   5.517155337423314,
//   5.618641472392639,
//   5.554059386503067,
//   5.47102527607362,
//   5.526381349693253,
//   5.4433472392638045,
//   5.489477300613498,
//   5.489477300613498,
//   5.378765153374234,
//   5.351087116564417,
//   5.351087116564417,
//   5.369539141104296,
//   5.212696932515338,
//   5.221922944785277,
//   5.046628711656442,
//   4.613006134969326,
//   4.806752392638037,
//   4.797526380368099,
//   4.908238527607363,
//   4.862108466257669,
//   4.92669055214724,
//   4.963594601226994,
//   4.9820466257668725,
//   4.99127263803681,
//   5.074306748466259,
//   5.111210797546013,
//   5.009724662576687,
//   4.963594601226994,
//   5.009724662576687,
//   4.972820613496933,
//   4.880560490797547,
//   4.825204417177915,
//   5.028176687116566,
//   4.972820613496933,
//   4.954368588957056,
//   5.378765153374234,
//   5.314183067484663,
//   5.378765153374234,
//   5.369539141104296,
//   5.240374969325154,
//   5.055854723926381,
//   5.166566871165645,
//   5.074306748466259,
//   4.954368588957056,
//   4.9359165644171785,
//   4.843656441717792,
//   4.843656441717792,
//   4.751396319018406,
//   4.677588220858897,
//   4.815978404907976,
//   4.714492269938651,
//   4.769848343558283,
//   4.862108466257669,
//   4.78830036809816,
//   4.917464539877301,
//   4.945142576687117,
//   4.862108466257669,
//   4.806752392638037,
//   4.871334478527608,
//   4.8344304294478535,
//   4.9359165644171785,
//   4.899012515337423,
//   4.880560490797547,
//   4.843656441717792,
//   4.815978404907976,
//   4.871334478527608,
//   4.825204417177915,
//   4.797526380368099,
//   4.862108466257669,
//   4.843656441717792,
//   4.797526380368099,
//   4.797526380368099,
//   4.742170306748466,
//   4.714492269938651,
//   4.742170306748466,
//   4.751396319018406,
//   4.779074355828222,
//   4.8344304294478535,
//   4.8344304294478535,
//   4.779074355828222,
//   4.78830036809816,
//   4.825204417177915,
//   4.769848343558283,
//   4.769848343558283,
//   4.696040245398773,
//   4.705266257668712,
//   4.714492269938651,
//   4.72371828220859,
//   4.705266257668712,
//   4.659136196319019,
//   4.622232147239264,
//   4.622232147239264,
//   4.622232147239264,
//   4.622232147239264,
//   4.622232147239264,
//   4.613006134969326,
//   4.668362208588957,
//   4.72371828220859,
//   4.677588220858897,
//   4.64991018404908,
//   4.64991018404908,
//   4.668362208588957,
//   4.696040245398773,
//   4.64991018404908,
//   4.622232147239264,
//   4.622232147239264,
//   4.5853280981595095,
//   4.640684171779142,
//   4.64991018404908,
//   4.686814233128835,
//   4.714492269938651,
//   4.613006134969326,
//   4.613006134969326,
//   4.632147239263803,
//   4.5651533742331285,
//   4.5651533742331285,
//   4.68,
//   4.766134969325154,
//   4.8618404907975465,
//   5.2446625766871176,
//   5.168098159509203,
//   5.225521472392638,
//   5.2446625766871176,
//   5.043680981595092,
//   5.110674846625767,
//   5.053251533742332,
//   4.9479754601226995,
//   4.833128834355828,
//   4.833128834355828,
//   4.995828220858896,
//   4.995828220858896,
//   4.957546012269939,
//   4.967116564417179,
//   4.842699386503067,
//   4.81398773006135,
//   4.81398773006135,
//   4.8618404907975465,
//   4.823558282208589,
//   4.81398773006135,
//   4.8618404907975465,
//   4.919263803680981,
//   4.852269938650307,
//   4.842699386503067,
//   4.890552147239264,
//   4.995828220858896,
//   4.919263803680981,
//   5.091533742331289,
//   5.062822085889571,
//   5.07239263803681,
//   5.120245398773006,
//   5.043680981595092,
//   5.005398773006135,
//   4.9479754601226995,
//   4.957546012269939,
//   4.9479754601226995,
//   4.928834355828221,
//   4.880981595092024,
//   4.880981595092024,
//   4.976687116564418,
//   4.919263803680981,
//   4.93840490797546,
//   4.880981595092024,
//   4.852269938650307,
//   4.833128834355828,
//   4.794846625766871,
//   4.890552147239264,
//   4.823558282208589,
//   4.81398773006135,
//   4.80441717791411,
//   4.81398773006135,
//   4.842699386503067,
//   4.8618404907975465,
//   4.833128834355828,
//   5.014969325153374,
//   5.014969325153374,
//   4.957546012269939,
//   4.919263803680981,
//   4.852269938650307,
//   4.871411042944786,
//   4.8618404907975465,
//   4.833128834355828,
//   4.8618404907975465,
//   4.880981595092024,
//   4.928834355828221,
//   4.890552147239264,
//   4.890552147239264,
//   4.900122699386503,
//   4.900122699386503,
//   4.890552147239264,
//   4.852269938650307,
//   4.871411042944786,
//   4.833128834355828,
//   4.890552147239264,
//   4.995828220858896,
//   4.957546012269939,
//   4.928834355828221,
//   4.900122699386503,
//   4.890552147239264,
//   4.880981595092024,
//   4.93840490797546,
//   5.005398773006135,
//   5.043680981595092,
//   5.139386503067485,
//   5.081963190184049,
//   5.043680981595092,
//   5.139386503067485,
//   5.081963190184049,
//   5.024539877300613,
//   5.062822085889571,
//   5.091533742331289,
//   5.081963190184049,
//   5.081963190184049,
//   5.101104294478528,
//   5.187239263803681,
//   5.20638036809816,
//   5.139386503067485,
//   5.168098159509203,
//   5.263803680981595,
//   5.19680981595092,
//   5.273374233128834,
//   5.263803680981595,
//   5.148957055214724,
//   5.07239263803681,
//   4.986257668711657,
//   4.9479754601226995,
//   4.928834355828221,
//   4.919263803680981,
//   4.880981595092024,
//   4.871411042944786,
//   4.8618404907975465,
//   4.880981595092024,
//   4.900122699386503,
//   4.919263803680981,
//   4.852269938650307,
//   4.80441717791411,
//   4.785276073619632,
//   4.756564417177914,
//   4.785276073619632,
//   4.737423312883436,
//   4.737423312883436,
//   4.727852760736197,
//   4.756564417177914,
//   4.699141104294479,
//   4.670429447852761,
//   4.737423312883436,
//   4.708711656441718,
//   4.746993865030675,
//   4.6608588957055215,
//   4.727852760736197,
//   4.871411042944786,
//   4.919263803680981,
//   4.81398773006135,
//   4.823558282208589,
//   4.842699386503067,
//   4.823558282208589,
//   4.80441717791411,
//   4.727852760736197,
//   4.68957055214724,
//   4.670429447852761,
//   4.68,
//   4.622576687116565,
//   4.603435582822086,
//   4.622576687116565,
//   4.613006134969326,
//   4.5651533742331285,
//   4.4885889570552155,
//   4.536441717791411,
//   4.5651533742331285,
//   4.593865030674847,
//   4.593865030674847,
//   4.641717791411042,
//   4.766134969325154,
//   4.785276073619632,
//   4.737423312883436,
//   4.727852760736197,
//   4.909693251533742,
//   4.833128834355828,
//   4.842699386503067,
//   4.775705521472393,
//   4.80441717791411,
//   4.81398773006135,
//   4.81398773006135,
//   4.775705521472393,
//   4.794846625766871,
//   4.737423312883436,
//   4.775705521472393,
//   4.900122699386503,
//   4.957546012269939,
//   4.967116564417179,
//   4.93840490797546,
//   4.93840490797546,
//   4.833128834355828,
//   4.986257668711657,
//   4.928834355828221,
//   4.928834355828221,
//   4.9479754601226995,
//   4.919263803680981,
//   4.93840490797546,
//   4.890552147239264,
//   4.967116564417179,
//   4.995828220858896,
//   4.976687116564418,
//   4.9479754601226995,
//   4.976687116564418,
//   4.919263803680981,
//   4.919263803680981,
//   4.986257668711657,
//   4.957546012269939,
//   4.976687116564418,
//   4.967116564417179,
//   4.995828220858896,
//   5.024539877300613,
//   5.014969325153374,
//   4.9479754601226995,
//   4.919263803680981,
//   4.871411042944786,
//   4.80441717791411,
//   4.766134969325154,
//   4.756564417177914,
//   4.785276073619632,
//   4.727852760736197,
//   4.756564417177914,
//   4.775705521472393,
//   4.785276073619632,
//   4.80441717791411,
//   4.81398773006135,
//   4.785276073619632,
//   4.80441717791411,
//   4.785276073619632,
//   4.775705521472393,
//   4.727852760736197,
//   4.737423312883436,
//   4.708711656441718,
//   4.651288343558282,
//   4.756564417177914,
//   4.756564417177914,
//   4.746993865030675,
//   4.68957055214724,
//   4.68,
//   4.699141104294479,
//   4.68957055214724,
//   4.670429447852761,
//   4.68,
//   4.6608588957055215,
//   4.651288343558282,
//   4.68,
//   4.651288343558282,
//   4.708711656441718,
//   4.651288343558282,
//   4.670429447852761,
//   4.622576687116565,
//   4.622576687116565,
//   4.603435582822086,
//   4.584294478527608,
//   4.603435582822086,
//   4.6608588957055215,
//   4.708711656441718,
//   4.699141104294479,
//   4.68,
//   4.65,
//   4.67,
//   4.63,
//   4.6,
//   4.66,
//   4.66,
//   4.6,
//   4.6,
//   4.58,
//   4.69,
//   4.67,
//   4.7,
//   4.67,
//   4.67,
//   4.65,
//   4.6,
//   4.63,
//   4.68,
//   4.58,
//   4.52,
//   4.49,
//   4.43,
//   4.46,
//   4.53,
//   4.6,
//   4.55,
//   4.59,
//   4.55,
//   4.65,
//   4.65,
//   4.71,
//   4.69,
//   4.63,
//   4.7,
//   4.65,
//   4.76,
//   4.7,
//   4.67,
//   4.63,
//   4.61,
//   4.64,
//   4.63,
//   4.73,
//   4.69,
//   4.8,
//   5.12,
//   5.19,
//   5.07,
//   5.15,
//   5.2,
//   5.23,
//   5.35,
//   5.26,
//   5.29,
//   5.09,
//   5.05,
//   4.95,
//   4.92,
//   4.97,
//   5.05,
//   4.92,
//   4.84,
//   4.87,
//   4.82,
//   4.8,
//   4.85,
//   4.83,
//   4.77,
//   4.72,
//   4.72,
//   4.66,
//   4.71,
//   4.71,
//   4.67,
//   4.73,
//   4.73,
//   4.69,
//   4.66,
//   4.62,
//   4.61,
//   4.66,
//   4.77,
//   4.67,
//   4.7,
//   4.66,
//   4.6,
//   4.58,
//   4.57,
//   4.64,
//   4.88,
//   4.81,
//   4.76,
//   4.71,
//   4.7,
//   4.67,
//   4.75,
//   4.68,
//   4.69,
//   4.7,
//   4.71,
//   4.67,
//   4.64,
//   4.64,
//   4.69,
//   4.75,
//   4.78,
//   4.8,
//   4.9,
//   4.84,
//   4.88,
//   4.86,
//   4.91,
//   4.81,
//   4.89,
//   4.95,
//   4.95,
//   4.99,
//   5.02,
//   4.95,
//   4.96,
//   4.96,
//   5.01,
//   4.99,
//   4.94,
//   4.94,
//   5,
//   5.03,
//   5.02,
//   5.13,
//   5.24,
//   5.37,
//   5.38,
//   5.26,
//   5.2,
//   5.02,
//   4.99,
//   5.28,
//   5.37,
//   5.4,
//   5.33,
//   5.41,
//   5.3,
//   5.38,
//   5.37,
//   5.2,
//   5.48,
//   5.49,
//   5.41,
//   5.46,
//   5.6,
//   5.35,
//   5.31,
//   5.41,
//   5.36,
//   5.5,
//   5.46,
//   5.39,
//   5.3,
//   5.15,
//   5.07,
//   5.09,
//   5.16,
//   5.2,
//   5.49,
//   5.45,
//   5.47,
//   5.37,
//   5.35,
//   5.28,
//   5.19,
//   5.15,
//   4.75,
//   4.87,
//   4.93,
//   4.98,
//   4.93,
//   5.06,
//   5.26,
//   5.27,
//   5.26,
//   5.34,
//   5.3,
//   5.44,
//   5.44,
//   5.51,
//   5.97,
//   5.9,
//   6.12,
//   6.07,
//   5.93,
//   5.93,
//   6.01,
//   6.04,
//   5.94,
//   6.09,
//   5.86,
// ];
// console.log('eric1111111111', khelp.MA(testD, 4));
// console.log('eric1111111111', khelp.MA(testD, 144));
// console.log('eric1111111111', khelp.MA(testD, 233));
